version: 2
jobs:
  python:
    docker:
      - image: circleci/python:2.7.13
    working_directory: ~/repo
    steps:
      - checkout

      - run:
          name: Install Ubuntu dependencies
          command: sudo apt install -y  software-properties-common python-dev libsqlite3-dev zlib1g-dev

      - restore_cache:
          key: requirements-{{ checksum "requirements.txt" }}
      - run:
          name: Install Python deps in a venv
          command: |
            virtualenv -p /usr/bin/python2.7 venv
            source venv/bin/activate
            pip install -r requirements.txt
            echo "source $(pwd)/venv/bin/activate" >> $BASH_ENV
      - save_cache:
          key: requirements-{{ checksum "requirements.txt" }}
          paths:
            - "venv"

  opendata_build:
    docker:
      - image: antoineaugusti/secmar-opendata-build:0.0.4
    working_directory: ~/repo/opendata
    steps:
      - checkout:
          path: ~/repo
      - run:
          name: Create documentation for open data
          command: |
            python -c "from transformers.opendata.filter_doc import FilterYamlDocumentation;FilterYamlDocumentation('config/filter_doc.json').filter_yaml('doc.yml', 'opendata_doc.yml')"
      - run:
          name: Check doc files against OpenAPI specification
          command: |
            speccy lint doc.yml -s info-contact -s operation-tags -s operation-operationId -s openapi-tags
            speccy lint opendata_doc.yml -s info-contact -s operation-tags -s operation-operationId -s openapi-tags
      - run:
          name: Git clone VuePress template
          command: |
            git clone git@github.com:snosan-tools/secmar-documentation.git /tmp/secmar-documentation
      - restore_cache:
          name: Restore Yarn package cache
          keys:
            - yarn-packages-{{ checksum "/tmp/secmar-documentation/yarn.lock" }}
      - run:
          name: Install Dependencies
          command: cd /tmp/secmar-documentation && yarn install
      - save_cache:
          name: Save Yarn package cache
          key: yarn-packages-{{ checksum "/tmp/secmar-documentation/yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - run:
          name: Build Markdown documentation for opendata
          command: |
            cp -r /tmp/secmar-documentation /tmp/secmar-documentation-opendata
            oa-to-md opendata_doc.yml opendata_schema.md fr
            wget https://raw.githubusercontent.com/MTES-MCT/secmar-data/master/CHANGELOG.md -O doc/CHANGELOG.md
            cat doc/schema.md opendata_schema.md > /tmp/file && mv /tmp/file doc/opendata_schema.md
            cp doc/{preambule.md,CHANGELOG.md,cross.md,donnees.md,tables_codes.md} /tmp/secmar-documentation-opendata/
            cp doc/opendata_schema.md /tmp/secmar-documentation-opendata/schema.md
            cd /tmp/secmar-documentation-opendata/
            MODE='opendata' yarn run build
      - run:
          name: Build Markdown documentation for SNOSAN
          command: |
            oa-to-md doc.yml schema.md fr
            wget https://raw.githubusercontent.com/MTES-MCT/secmar-data/master/CHANGELOG.md -O doc/CHANGELOG.md
            cat doc/schema.md schema.md > /tmp/file && mv /tmp/file doc/snosan_schema.md
            cp doc/{CHANGELOG.md,tables_codes.md,langage_sql.md,redash.md} /tmp/secmar-documentation/
            cp doc/snosan_schema.md /tmp/secmar-documentation/schema.md
            cd /tmp/secmar-documentation/
            yarn run build
      - run:
          name: Zip files
          command: |
            cd /tmp/secmar-documentation/.vuepress/dist
            zip -r /tmp/secmar-documentation.zip .
            cd /tmp/secmar-documentation-opendata/.vuepress/dist
            zip -r /tmp/secmar-documentation-opendata.zip .
      - persist_to_workspace:
          root: /tmp
          paths:
            - secmar-documentation.zip
            - secmar-documentation-opendata.zip

  opendata_test:
    docker:
      - image: circleci/python:3.6
    working_directory: ~/repo/opendata
    steps:
      - checkout:
          path: ~/repo
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "requirements.txt" }}
      - run: sudo apt install python-dev
      - run:
          name: Install dependencies
          command: |
            python -m venv venv || virtualenv -p /usr/bin/python2.7 venv
            . venv/bin/activate
            pip install -r requirements.txt
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}

      - run:
          name: Run test suite
          command: |
            . venv/bin/activate
            nosetests .

  opendata_push_documentation:
    docker:
      - image: circleci/python:3.6
    steps:
      - attach_workspace:
          at: /tmp/out
      - run:
          name: Setup Git
          command: |
            git config --global user.email "robot@circleci.com"
            git config --global user.name "Circle CI"
      - run:
          name: Push opendata documentation to GitHub
          command: |
            git clone -q https://${GITHUB_TOKEN}@github.com/MTES-MCT/secmar-documentation.git /tmp/secmar-documentation
            unzip -o /tmp/out/secmar-documentation-opendata.zip -d /tmp/secmar-documentation/
            cd /tmp/secmar-documentation
            git add .
            if [ -n "$(git status --porcelain)" ]; then
              git commit -am "Update after https://github.com/entrepreneur-interet-general/predisauvetage/commit/$CIRCLE_SHA1"
              git push -q origin master
            else
              echo "No changes to documentation";
            fi
      - run:
          name: Push SNOSAN documentation to GitHub
          command: |
            git clone -q https://${GITHUB_TOKEN}@github.com/snosan-tools/snosan-documentation.git /tmp/snosan-documentation
            unzip -o /tmp/out/secmar-documentation.zip -d /tmp/snosan-documentation/
            cd /tmp/snosan-documentation
            git add .
            if [ -n "$(git status --porcelain)" ]; then
              git commit -am "Update after https://github.com/entrepreneur-interet-general/predisauvetage/commit/$CIRCLE_SHA1"
              git push -q origin master
            else
              echo "No changes to documentation";
            fi
workflows:
  version: 2
  all_jobs:
    jobs:
      - python
      - opendata_test
      - opendata_build:
          requires:
            - opendata_test
      - opendata_push_documentation:
          requires:
            - opendata_build
          filters:
            branches:
              only: master
